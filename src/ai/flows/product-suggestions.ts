// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-powered product suggestions based on browsing history.
 *
 * - getProductSuggestions - A function that returns product suggestions.
 * - ProductSuggestionsInput - The input type for the getProductSuggestions function.
 * - ProductSuggestionsOutput - The return type for the getProductSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ProductSuggestionsInputSchema = z.object({
  browsingHistory: z
    .string()
    .describe('The user browsing history as a string of product names.'),
  numberOfSuggestions: z
    .number()
    .default(3)
    .describe('The maximum number of product suggestions to return.'),
});
export type ProductSuggestionsInput = z.infer<typeof ProductSuggestionsInputSchema>;

const ProductSuggestionSchema = z.object({
  productName: z.string().describe('The name of the suggested product.'),
  reason: z.string().describe('The reason why this product is suggested.'),
});

const ProductSuggestionsOutputSchema = z.array(ProductSuggestionSchema).describe('An array of product suggestions.');
export type ProductSuggestionsOutput = z.infer<typeof ProductSuggestionsOutputSchema>;

export async function getProductSuggestions(input: ProductSuggestionsInput): Promise<ProductSuggestionsOutput> {
  return productSuggestionsFlow(input);
}

const productSuggestionsPrompt = ai.definePrompt({
  name: 'productSuggestionsPrompt',
  input: {schema: ProductSuggestionsInputSchema},
  output: {schema: ProductSuggestionsOutputSchema},
  prompt: `You are a helpful shopping assistant. Based on the user's browsing history, suggest other products they might be interested in.

  Browsing History: {{{browsingHistory}}}

  Suggest a maximum of {{{numberOfSuggestions}}} products.

  Format your response as a JSON array of product suggestions with the product name and the reason for the suggestion.`,
});

const productSuggestionsFlow = ai.defineFlow(
  {
    name: 'productSuggestionsFlow',
    inputSchema: ProductSuggestionsInputSchema,
    outputSchema: ProductSuggestionsOutputSchema,
  },
  async input => {
    const {output} = await productSuggestionsPrompt(input);
    return output!;
  }
);
